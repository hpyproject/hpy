---
name: tests

on: [pull_request]

jobs:
  main_tests:
    name: Main tests ${{ matrix.os }} ${{ matrix.python-version }} ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      # Duplicate changes to this matrix to 'poc_tests'
      matrix:
        os: [macos-12]
        python-version: ['3.9', '3.10']
        compiler: [""]
        include:
          - os: ubuntu-latest
            python-version: '3.7'
          - os: ubuntu-latest
            python-version: '3.8'
          - os: ubuntu-latest
            python-version: '3.10'
            compiler: 'g++'
          - os: ubuntu-latest
            python-version: '3.11'

    steps:
      - uses: actions/checkout@v2

      # - template: azure-templates/ccache.yml
      #   parameters:
      #     pythonVersion: $(python.version)
      # - template: azure-templates/python.yml
      #   parameters:
      #     pythonVersion: $(python.version)

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install/Upgrade Python dependencies
        run: python -m pip install --upgrade pip wheel 'setuptools>=60.2'

      - name: Build
        run: python -m pip install .

      - if: ${{ matrix.compiler }}
        # Only set the compiler for the tests, not for the build
        run: echo "CC=${{ matrix.compiler }}" >> $GITHUB_ENV

      - name: Run tests
        run: |
          python -m pip install pytest pytest-xdist filelock
          python -m pytest --basetemp=.tmpdir --durations=16 -n auto test/

  poc_tests:
    name: Proof of concept tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-12]
        python-version: ['3.10']

    steps:
      - uses: actions/checkout@v2

      # - template: azure-templates/ccache.yml
      #   parameters:
      #     pythonVersion: $(python.version)
      # - template: azure-templates/python.yml
      #   parameters:
      #     pythonVersion: $(python.version)

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install/Upgrade Python dependencies
        run: python -m pip install --upgrade pip wheel
        shell: bash

      - name: 'Test setup.py --hpy-abi=cpython bdist_wheel'
        run: proof-of-concept/test_pof.sh wheel cpython
        shell: bash

      - name: 'Test setup.py --hpy-abi=universal bdist_wheel'
        run: proof-of-concept/test_pof.sh wheel universal
        shell: bash

      - name: 'Test setup.py --hpy-abi=cpython install'
        run: proof-of-concept/test_pof.sh setup_py_install cpython
        shell: bash

      - name: 'Test setup.py --hpy-abi=universal install'
        run: proof-of-concept/test_pof.sh setup_py_install universal
        shell: bash

      - name: 'Test setup.py --hpy-abi=cpython build_ext --inplace'
        run: proof-of-concept/test_pof.sh setup_py_build_ext_inplace cpython
        shell: bash

      - name: 'Test setup.py --hpy-abi=universal build_ext --inplace'
        run: proof-of-concept/test_pof.sh setup_py_build_ext_inplace universal
        shell: bash


  porting_example_tests:
    name: Porting example tests
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [macos-12]
        python-version: ['3.9']

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install/Upgrade Python dependencies
        run: python -m pip install --upgrade pip wheel
        shell: bash

      - name: Install HPy
        run: python -m pip install .

      - name: Install pytest
        run: |
          python -m pip install pytest

      - name: Run tests
        run: make porting-example-tests
        shell: bash

      - name: Run tests of completed port in debug mode
        env:
          HPY_DEBUG: "1"
          TEST_ARGS: "-s -k hpy_final"
        run: make porting-example-tests
        shell: bash


  docs_examples_tests:
    name: Documentation examples tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-12]
        python-version: ['3.10']

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install/Upgrade Python dependencies
        run: python -m pip install --upgrade pip wheel
        shell: bash

      - name: Install HPy
        run: python -m pip install .

      - name: Install pytest
        run: |
          python -m pip install pytest pytest-xdist filelock
      - name: Run tests
        run: make docs-examples-tests
        shell: bash

